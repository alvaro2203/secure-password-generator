---
// Password Display Component
// Shows the generated password with copy functionality
---

<div class="space-y-4">
  <!-- Password Output -->
  <div class="relative">
    <label
      for="password-output"
      class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2"
    >
      Password
    </label>
    <div class="relative">
      <textarea
        id="password-output"
        name="password-output"
        class="w-full px-4 py-3 pr-12 text-sm font-mono bg-gray-50 dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent resize-none transition-colors duration-200"
        placeholder="Your secure password will appear here..."
        readonly
        rows="2"
        aria-label="Generated password output"
        aria-describedby="password-help"></textarea>
      <div id="password-help" class="sr-only">
        This field contains your generated password. Use the copy button to copy
        it to your clipboard.
      </div>

      <!-- Copy Button -->
      <button
        id="copy-button"
        type="button"
        class="absolute right-2 top-2 p-2 text-gray-500 hover:text-primary-600 dark:text-gray-400 dark:hover:text-primary-400 transition-colors duration-200 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"
        title="Copy password to clipboard"
        aria-label="Copy password to clipboard"
        disabled
      >
        <svg
          id="copy-icon"
          class="w-5 h-5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"
          ></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- Password Actions -->
  <div class="flex flex-wrap gap-3" role="group" aria-label="Password actions">
    <button
      id="generate-button"
      type="button"
      class="flex-1 min-w-[140px] px-6 py-3 bg-gradient-to-r from-primary-600 to-secondary-600 hover:from-primary-700 hover:to-secondary-700 text-white font-medium rounded-lg transition-all duration-200 transform hover:scale-105 hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none disabled:hover:shadow-none"
      aria-describedby="generate-help"
    >
      <span class="flex items-center justify-center">
        <svg
          class="w-5 h-5 mr-2"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
          ></path>
        </svg>
        Generate Password
      </span>
    </button>
    <div id="generate-help" class="sr-only">
      Click to generate a new password with your current settings
    </div>

    <button
      id="clear-button"
      type="button"
      class="px-4 py-3 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 font-medium rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2"
      title="Clear password"
      aria-label="Clear password from display"
    >
      <svg
        class="w-5 h-5"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
        aria-hidden="true"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"
        ></path>
      </svg>
    </button>
  </div>
</div>

<script>
  import { copyToClipboard } from "../utils/clipboard";

  /**
   * Updates the password display
   */
  function updatePasswordDisplay(password: string) {
    const passwordOutput = document.getElementById(
      "password-output"
    ) as HTMLTextAreaElement;
    const copyButton = document.getElementById(
      "copy-button"
    ) as HTMLButtonElement;

    if (!passwordOutput || !copyButton) return;

    passwordOutput.value = password;
    copyButton.disabled = !password;

    // Update strength indicator if available
    if ((window as any).updateStrengthIndicator) {
      (window as any).updateStrengthIndicator(password);
    }
  }

  /**
   * Clears the password display
   */
  function clearPassword() {
    updatePasswordDisplay("");

    // Add visual feedback
    const clearButton = document.getElementById("clear-button");
    if (clearButton) {
      clearButton.classList.add("animate-pulse");
      setTimeout(() => {
        clearButton.classList.remove("animate-pulse");
      }, 200);
    }
  }

  /**
   * Handles copy button click
   */
  async function handleCopyClick() {
    const passwordOutput = document.getElementById(
      "password-output"
    ) as HTMLTextAreaElement;
    const copyButton = document.getElementById(
      "copy-button"
    ) as HTMLButtonElement;
    const copyIcon = document.getElementById("copy-icon");

    if (!passwordOutput || !copyButton || !copyIcon) return;

    const password = passwordOutput.value;
    if (!password) return;

    // Disable button during copy operation
    copyButton.disabled = true;

    try {
      const result = await copyToClipboard(password);

      // Show toast notification
      if ((window as any).showToast) {
        (window as any).showToast({
          message: result.message,
          type: result.success ? "success" : "error",
          duration: 2000,
        });
      }

      if (result.success) {
        // Change icon to checkmark temporarily
        copyIcon.innerHTML = `
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
        `;

        // Revert icon after 2 seconds
        setTimeout(() => {
          copyIcon.innerHTML = `
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
          `;
        }, 2000);
      }
    } finally {
      // Re-enable button
      copyButton.disabled = false;
    }
  }

  // Event listeners
  document
    .getElementById("copy-button")
    ?.addEventListener("click", handleCopyClick);
  document
    .getElementById("clear-button")
    ?.addEventListener("click", clearPassword);

  // Make functions globally available
  (window as any).updatePasswordDisplay = updatePasswordDisplay;
  (window as any).clearPassword = clearPassword;
</script>
